{"version":3,"sources":["app.coffee","resource.coffee","services/checkListService.coffee","services/sessionService.coffee","services/taskService.coffee","controllers/checkListController.coffee","controllers/loginController.coffee","controllers/mainController.coffee","controllers/taskSetController.coffee"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["angular.module 'todoApp.config', []\n.value 'todoApp.config',\n  apiBaseUrl: 'api/v1',\n  templateBaseUrl: 'partials'\n\nangular.module 'todoApp.resource', [\n  'ngResource'\n  'todoApp.config'\n]\n\nangular.module 'todoApp.services', [\n  'ngCookies'\n  'ngResource'\n  'todoApp.config'\n  'todoApp.resource'\n]\n\nangular.module 'todoApp', [\n  'todoApp.config'\n  'todoApp.services'\n]\n\n","angular.module('todoApp.resource').factory 'Resource', [\n  '$resource', 'todoApp.config'\n  ($resource, config) ->\n    (url, params, methods) ->\n      defaults =\n        update:\n          method: 'put'\n          isArray: false\n        create: method: 'post'\n      methods = angular.extend(defaults, methods)\n      resource = $resource(\"#{config.apiBaseUrl}/#{url}\", params, methods)\n\n      resource::$save = ->\n        if !@id\n          @$create()\n        else\n          @$update()\n\n      resource\n]\n","angular.module('todoApp.services').factory('CheckList', [\n  '$log', 'Resource'\n  ($log, $resource) ->\n    $resource('checklists/:id', { id: '@id' })\n])\n","angular.module('todoApp.services').factory('SessionService', [\n  '$log'\n  '$q'\n  '$resource'\n  '$cookieStore'\n  ($log, $q, $resource, $cookieStore)->\n    USER_COOKIE = 'userCookie'\n\n    loginRes = $resource '/auth/login', {},\n      'login':\n        method: 'POST'\n\n    logoutRes = $resource '/auth/logout', {},\n      'logout':\n        method: 'GET'\n\n    currentUser = {}\n\n    authorized = ->\n      getCurrentUser().authorized is 'true'\n\n    login = (newUser)->\n      newUser.token = $('input[name=_token]').val()\n\n      #simulate ajax call via a promise\n\n\n      promise = loginRes.login(newUser).$promise\n      promise.then (result)->\n        updateCurrentUser(result, true)\n\n      promise\n\n    logout = ->\n      promise = logoutRes.logout().$promise\n      promise.then (f) ->\n        updateCurrentUser({}, false)\n      promise\n\n\n    updateCurrentUser = (user, authStatus)->\n      if authStatus and user? and user.id? and user.name?\n        currentUser.id = user.id\n        currentUser.name = user.name\n        currentUser.authorized = authStatus + \"\"\n      else\n        currentUser = { authorized: false + \"\" }\n\n      $cookieStore.put(USER_COOKIE , currentUser)\n\n\n    getCurrentUser = ->\n      cookieUser = $cookieStore.get(USER_COOKIE)\n      if cookieUser?\n        currentUser = cookieUser\n      currentUser\n\n    {\n      login\n      logout\n      authorized\n      getCurrentUser\n    }\n])","angular.module('todoApp.services').factory('Task', [\n  '$log', 'Resource'\n  ($log, $resource) ->\n    $resource('checklists/:check_list_id/tasks/:id', { check_list_Id: '@data.check_list_id', id: '@data.id' })\n])\n","angular.module('todoApp').controller 'CheckListController'\n, [ '$log'\n    'CheckList'\n    'SessionService'\n    'Task'\n    ($log, CheckList, SessionService, Task) ->\n\n      @checklists = []\n      @tasks = []\n\n      getUserId = () => SessionService.getCurrentUser().id\n\n      getCheckLists = () =>\n        userId = getUserId()\n        @checklists = CheckList.get {user_id: userId}\n\n\n      @loadTasksFor = (index, checklistId) ->\n        @tasks[index] = Task.get {check_list_id: checklistId}\n\n      @toggleTask = (parentIndex, index) ->\n        if @tasks[parentIndex].data[index].attributes.done == \"0\"\n          @tasks[parentIndex].data[index].attributes.done = \"1\"\n        else\n          @tasks[parentIndex].data[index].attributes.done = \"0\"\n        saveTask(parentIndex, index)\n\n      @editChecklistName = (index) ->\n        newName = prompt(\"Change name?\", @checklists.data[index].attributes.name)\n        if newName.length > 0\n          @checklists.data[index].attributes.name = newName\n          saveChecklist(index)\n\n      @deleteCheckList = (index) ->\n        CheckList.delete id: @checklists.data[index].id\n        @checklists.data.splice(index, 1)\n        @tasks.splice(index, 1)\n\n      @editTaskTitle = (parentIndex, index) ->\n        newTitle = prompt(\"Change title?\", @tasks[parentIndex].data[index].attributes.title)\n        if newTitle.length > 0\n          @tasks[parentIndex].data[index].attributes.title = newTitle\n          saveTask(parentIndex, index)\n\n      @editTaskDescription = (parentIndex, index) ->\n        newDesc = prompt(\"Change description?\", @tasks[parentIndex].data[index].attributes.description)\n        @tasks[parentIndex].data[index].attributes.description = newDesc\n        saveTask(parentIndex, index)\n\n      @deleteTask = (parentIndex, index) ->\n        Task.delete\n          check_list_id: @checklists.data[parentIndex].id,\n          id: @tasks[parentIndex].data[index].id\n        @tasks[parentIndex].data.splice(index, 1)\n      @newTask = (parentIndex) ->\n        name = prompt(\"Title?\")\n        if (name != null && name.length > 0)\n          Task.create {check_list_id: @checklists.data[parentIndex].id },\n            {\n              title: name,\n              check_list_id: @checklists.data[parentIndex].id\n            }, =>\n              @loadTasksFor(parentIndex, @checklists.data[parentIndex].id)\n\n      @newCheckList = ->\n        name = prompt(\"Name?\")\n        if (name != null && name.length > 0)\n          CheckList.create {}, {name: name, user_id: getUserId() }, ->\n            getCheckLists()\n\n      saveChecklist = (index) =>\n        CheckList.update\n          id: @checklists.data[index].id\n        ,\n          @checklists.data[index].attributes\n\n\n      saveTask = (parentIndex, index) =>\n        Task.update\n          check_list_id: @checklists.data[parentIndex].id,\n          id: @tasks[parentIndex].data[index].id\n        ,\n          @tasks[parentIndex].data[index].attributes\n\n\n\n      init = ->\n        getCheckLists()\n\n      init()\n\n      @\n  ]","angular.module('todoApp').controller 'LoginController'\n, [ '$log'\n    '$scope'\n    'SessionService'\n    ($log, $scope, SessionService) ->\n\n\n      @user = false\n\n      @authorized = -> SessionService.authorized()\n\n      @credentials = {}\n\n      @login = ->\n        if (@credentials.email? and @credentials.email.length > 0 and @credentials.password? and @credentials.password.length > 0)\n         SessionService.login(@credentials)\n            .then ->\n              @user = SessionService.getCurrentUser()\n            , (err) =>\n              alert(\"Could not authenticate. Try 'user1@example.com' and 'password1'.\")\n\n      @logout = -> SessionService.logout()\n\n      init = =>\n        @user = SessionService.getCurrentUser()\n\n      init()\n      @\n\n  ]","angular.module('todoApp').controller 'MainController'\n, [ '$log'\n    'CheckList'\n    'SessionService'\n    ($log, CheckList, SessionService) ->\n\n      @authorized = ->\n        SessionService.authorized()\n\n  ]","angular.module('todoApp').controller 'TaskSetController'\n, [ '$log'\n    'Task'\n    'SessionService'\n    ($log, CheckList, Task) ->\n\n      @tasks = []\n\n      @loadFor = (checklistId) =>\n        console.log(\"Trying to load checklist\")\n        Task.get {check_list_id: checklistId}, (resp) =>\n          @tasks = resp.data\n          console.log(@tasks, @)\n\n      @\n  ]"],"sourceRoot":"/source/"}